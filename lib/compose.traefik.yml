services:
  traefik:
    image: traefik:3.3
    container_name: traefik
    restart: always
    depends_on:
      - docker-proxy
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: [ 'CMD', 'traefik', 'healthcheck', '--ping' ]
      interval: 5s
      retries: 3
    environment:
      TRAEFIK_DASHBOARD_HOST: '${TRAEFIK_DASHBOARD_HOST}'
      TZ: '${TIMEZONE}'
      CF_API_EMAIL_FILE: '/run/secrets/cf_email'
      CF_API_KEY_FILE: '/run/secrets/cf_api_key'
    secrets:
      - cf_email
      - cf_api_key
    ports:
      - '0.0.0.0:80:10080'
      - '0.0.0.0:443:10443'
#      - '127.0.0.1:8080:8080' # do not use this in production
    volumes:
      # Static Traefik Configuration
      - type: bind
        source: ./traefik/traefik.yml
        target: /etc/traefik/traefik.yml
        read_only: true
      # Folder to store dynamic configuration file provider
      - type: bind
        source: ./traefik/dynamic/
        target: /etc/traefik/dynamic/
        read_only: true
      # htaccess protection
      - type: bind
        source: '${HTPASSWD_PATH}'
        target: /docker/traefik/htpasswd/
        read_only: true
      # certificate storage
      - type: bind
        source: '${CERT_PATH}'
        target: /etc/traefik/certs/
        read_only: true
      - '${TRAEFIK_STORAGE_PATH}/logs:/etc/traefik/logs'  # traefik logs
      - '${ACME_STORAGE_PATH}:/etc/traefik/acme/'         # letsencrypt certificate storage (acme.json needs file permissions 600 and owner 2000:2000)
    networks:
      - traefik
      - docker-proxy
    labels:
      - 'traefik.enable=true'

      # redirect dashboard to https
      - 'traefik.http.routers.http-dashboard.entrypoints=web'
      - 'traefik.http.routers.http-dashboard.rule=Host(`${TRAEFIK_DASHBOARD_HOST}`)'
      - 'traefik.http.routers.http-dashboard.middlewares=https-redirect-scheme@file'

      # traefik dashboard
      - 'traefik.http.routers.traefik-dashboard.tls=true'
      - 'traefik.http.routers.traefik-dashboard.entrypoints=websecure'
      - 'traefik.http.routers.traefik-dashboard.rule=Host(`${TRAEFIK_DASHBOARD_HOST}`)'
      - 'traefik.http.routers.traefik-dashboard.tls.certresolver=${TRAEFIK_DASHBOARD_CERT_RESOLVER}'
      - 'traefik.http.routers.traefik-dashboard.service=api@internal'

      # Ping
      - 'traefik.http.routers.ping.rule=Host(`${TRAEFIK_DASHBOARD_HOST}`) && Path(`/ping`)'
      - 'traefik.http.routers.ping.tls=true'
      - 'traefik.http.routers.ping.service=ping@internal'
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: 0.75
    user: "${TRAEFIK_UID}:${TRAEFIK_UID}" # user traefik has to be created on the host system
    # sudo useradd -u 2000 -M -s /usr/sbin/nologin traefik

secrets:
  cf_email:
    file: '${SECRETS_PATH_CF_EMAIL}'
  cf_api_key:
    file: '${SECRETS_PATH_CF_API_KEY}'

networks:
  traefik:
    name: traefik
    driver: bridge
