services:
  traefik-proxy:
    image: traefik:2.10
    read_only: true
    restart: always
    depends_on:
      - docker-proxy
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: [ 'CMD', 'traefik', 'healthcheck', '--ping' ]
      interval: 5s
      retries: 3
    environment:
      ROOT_DOMAIN_NAME: '${ROOT_DOMAIN_NAME}'
      TRAEFIK_DASHBOARD_HOST: '${TRAEFIK_DASHBOARD_HOST}'
      TZ: '${TIMEZONE}'
    ports:
      - '0.0.0.0:80:10080'
      - '0.0.0.0:443:10443'
#      - '127.0.0.1:8080:8080' # do not use this in production
    volumes:
      - '${ROOT_PATH}/lib/traefik/traefik.yml:/etc/traefik/traefik.yml:ro' # Static Traefik Configuration
      - '${ROOT_PATH}/lib/traefik/dynamic/:/etc/traefik/dynamic/:ro'       # Folder to store dynamic configuration file provider
      - '${ROOT_PATH}/lib/traefik/acme/cloudflare.json:/etc/traefik/acme/cloudflare.json'   # certificate storage
      - '${ROOT_PATH}/lib/traefik/traefik.log:/etc/traefik/traefik.log'    # traefik log
      - '${ROOT_PATH}/lib/traefik/access.log:/etc/traefik/access.log'      # access log
      - '${CA_PATH}/:/etc/traefik/certs/:ro'                               # certificate storage
    networks:
      - traefik-proxy
      - docker-proxy
    labels:
      - 'traefik.enable=true'

      # redirect all requests to https
      - 'traefik.http.routers.http-catchall.entrypoints=http'
      - 'traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)'
      - 'traefik.http.routers.http-catchall.middlewares=middlewares-https-redirect-scheme@file'

      # traefik dashboard
      - 'traefik.http.routers.traefik-dashboard.tls=true'
      - 'traefik.http.routers.traefik-dashboard.entrypoints=https'
      - 'traefik.http.routers.traefik-dashboard.rule=Host(`${TRAEFIK_DASHBOARD_HOST}`)'
      - 'traefik.http.routers.traefik-dashboard.service=api@internal'

      # Ping
      - 'traefik.http.routers.ping.rule=Host(`${TRAEFIK_DASHBOARD_HOST}`) && Path(`/ping`)'
      - 'traefik.http.routers.ping.tls=true'
      - 'traefik.http.routers.ping.service=ping@internal'
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: 0.75
    user: "${TRAEFIK_UID}:${TRAEFIK_UID}" # user traefik has to be created on the host system
    # sudo useradd -u 2000 -M -s /usr/sbin/nologin traefik

networks:
  traefik-proxy:
    name: traefik-proxy
    driver: bridge
